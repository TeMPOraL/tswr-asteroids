#+title: Design notes
#+startup: hidestars

Some design notes to help finalize the game.


* Roadmap / plan

** Schedule
*** <2017-01-27 pią>--<2017-01-29 nie>

**** DOING Try playing with various wrap-around settings
     - [X] no wrap-around for bullets
     - [ ] no wrap-around for ships (dies on hitting border)
       I'd say that the only thing we need to add is some detection the entity is a ship and needs to run game-rules code as it dies.

**** TODO Improve collision detection efficiency
     At least eliminate that stupid N^2 thingy.

     First, measure max collision system (inner) iterations per game update. Verify if it's in N^2
     range.

     Add an entity-added and entity-removed hooks to #'update-system. In the future, consider
     instead having a system define its own entity sets and matching criteria.

     In collision system, use the hooks to maintain a list of layer -> entities on that layer.

     Replace the other-id loop in collision system w/ loops over entities in appropriate layers.

     Rest of the handling code should be the same.

     (NOTE this will destroy any possibility of dynamicly changing collision layers in-game; making
     it work again will require either an additional layer-modifed function provided by the system,
     or regenerating the lists every update (which is O(N), so not *that* bad, but not good
     either).)

**** DONE Make bullets die immediately if not wrapped-around
     CLOSED: [2017-01-27 pią 22:32]
     That should significantly save on computation

**** DONE Death == reset playing area
     CLOSED: [2017-01-27 pią 01:33]
     Don't forget to reset scores

*** <2017-01-30 pon>--<2017-02-05 nie>

**** TODO Add lives
     - need a display of number of lives left - maybe reuse the ship sprite, but draw just an outline
     - need a "respawn" function that doesn't clear the map
     - will probably need to introduce a temporary "respawn shield" that makes the ship invulnerable for a second or two

**** TODO 1-up powerup

**** TODO Add graphics for powerups that would let you distinguish between them

**** TODO All asteroids killed = spawn new (more)
     Add a ramping-up difficulty

**** TODO Implement laser

** Task staging ground
   I.e. unscheduled yet.

*** TODO Find some sounds and add them
    - [ ] bullet shot
    - [ ] triple shot
    - [ ] asteroid hit
    - [ ] powerup collected
    - [ ] ship destroyed

*** TODO Try out continuously spawning asteroids instead

*** TODO Think of aesthetics you could use for the game

*** TODO Implement explosive bullets
    New system type: explosion-expander; sole role is increasing collision radius (and sprite
    size). New entity type too, and a new sprite (expanding circle for now, maybe).

    Explosive bullets spawn the explosion entity on death.

*** TODO Implement missile launcher

*** TODO Implement shields

*** TODO Implement Hanzo bullets

*** TODO Implement a more complicated movement mechanic
    I.e. thruster mechanic using numpad.

*** TODO Implement a more smooth turning physics
    Try basing turning on rotational acceleration + friction.

*** TODO Try and make a continous collision detection algo
    Or that magic w/ Minkowski algebra. Anyway, something to avoid fast bullets passing through objects.

*** TODO Profile game and improve its efficiency

*** TODO Make a release bundle for Linux and Windows

* Main game
** UI elements
   - lives remaining
   - current score
   - high score
   - current weapon
   - current ship buffs (alternatively: visible on ship)
   - current weapon buffs (alternatively: visible on ship)

** Basic entity categories

*** Player Ship
*** Asteroid
    Splits into smaller when destroyed, several times. Smallest just die.
    Gives points, occassionally drops a powerup.

*** Bullet
    Kills asteroids.

*** Powerup
    Collected when colliding with player ship; decaying with time.

*** (future) some other kind of enemy (maybe an intelligent one)

** Buffs
   ALL BUFFS ARE INDEPENDENT and can be intermixed, though in some cases, a combination may be meaningless.

*** Gun types
    - [X] machine gun - fires bullets
    - [ ] cannon - fires explosive bullets
    - [ ] missile launcher - fires homing missiles that aim for closest target
    - [ ] laser - fires laser beams that can hit all targets along the beam

*** Gun buffs
    Can be equipped simultaneously.
    - [X] triple shot - shoots 3 bullets in spread, like: \|/.
    - [X] bidirectional shot - shoots additional bullet from behind
    - [X] faster fire - halves cooldown
    - [X] faster bullets - bullets move faster (not applicable to laser)
    - [X] big bullets - mutliplies the size of the bullet

*** Bullet types
    - [X] standard - collision = hit
    - [ ] explosive - short range; explode on collision or decay, explosion kills everything in range
    - [ ] fragmentary - on collision, besides destroying the target it splits into number of standard bullet shards somewhat uniformly
    - [ ] Hanzo - like fragmentary, except fragments are fast-moving and launched in a fan, as if they bounced off the target's bounding sphere

*** Bullet buffs
    - [X] longer living bullets - increases (e.g. doubles) the life time of bullets

*** Ship buffs
    - [ ] shield - a shield that can resist one collision with an asteroid
    - [ ] repulsor - pushes asteroids away a bit in a small radius around the ship

** Game rules
   - player starts with N lives
   - ship collides with asteroid => asteroid is destroyed, and:
     - player has shield => player loses shield
     - player has no shield => ship is destroyed, player loses life
   - lives == 0 => game over
   - asteroid is destroyed => player gets points for it
   - asteroids are continuously spawned randomly at the edge of the screen
     - asteroid spawn frequency, starting size and starting speed increases with game time
   - game has no win condition - you fight until you die

** Bugs to fix
*** BUG Collision handling fires multiple time per frame for an object if it collides with several other
    This way, one bullet can destroy a bunch of asteroids at the same time.
    Should not happen by default, IMO. Or at least, not for normal bullets.

    IMO best way would be to mark standard bullets as "dead" in collision handling,
    and reject further collision pairs in which a "dead" bullet shows up.

*** BUG Sometimes you respawn with asteroids that just start to split
    Theory: if you die in the same frame an asteroid is about to be torn apart,
    child asteroids are spawned *after* all other entities are marked for deletion,
    leading to those children remaining.

    Could fire up additional #'p2de:schedule-all-entities-for-deletion and hope the player
    won't notice one frame of invalid game state, but I would prefer a cleaner solution.
